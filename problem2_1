import java.util.*;
class problem2_1{
	static class Node{
		int val;
		Node next;
		Node(int v){
			this.val = v;
		}
	}

	public static Node removeDuplicateMethod1(Node head){
		if(head == null){
			return head;
		}
		HashSet<Integer> set = new HashSet<>();
		Node node = head;
		Node previous = null;
		while(node != null){
			if(!set.contains(node.val)){
				set.add(node.val);
				previous = node;
			}else{
				previous.next = node.next;
			}
			node = node.next;
		}
		return head;
	}

	public static Node removeDuplicateMethod2(Node head){
		if(head == null){
			return head;
		}
		Node res = head;
		while(head != null){
			Node temp = head;
			while(temp != null && temp.next != null){
				if(temp.next.val == head.val){
					temp.next = temp.next.next;
				}
				temp = temp.next;
			}
			head = head.next;
		}
		return res;
	}

	public static void main(String[] args) {
		Node node1 = new Node(5);
		Node node6 = new Node(5);
		Node node2 = new Node(3);
		Node node3 = new Node(5);
		Node node4 = new Node(3);
		Node node5 = new Node(1);
		
		node1.next = node6;
		node6.next = node2;
		node2.next = node3;
		node3.next = node4;
		node4.next = node5;
		Node head = node1;
		Node res = removeDuplicateMethod2(head);
		while(res != null){
			System.out.println(res.val);
			res = res.next;
		}
	}
}
