class Sort{
	
	public static void quickSort(int arr[], int left, int right){
		int i = left;
		int j = right;
		int pivot = arr[left + (right - left) / 2];
		while(i <= j){
			while(arr[i] < pivot){
				i++;
			}
			while(arr[j] > pivot){
				j--;
			}
			if(i <= j){
				swap(arr, i, j);
				i++;
				j--;
			}

		}
		if(j > left){
			quickSort(arr, left, j);
		}
		if(i < right){
			quickSort(arr, i , right);
		}
	}


	public static void quickSelect(int arr[], int left, int right, int target){
		if(left > right){
			return;
		}
		int i = left;
		int j = right;
		int pivot = midian3(arr);
		while(i <= j){
			while(arr[i] < pivot){
				i++;
			}
			while(arr[j] > pivot){
				j--;
			}
			if(i <= j){
				swap(arr, i, j);
				i++;
				j--;
			}
		}
		if(target <= i - 1){
			suickSelect(arr, start, i - 1, target)
		}
	}


	public static void swap(int arr[], int left, int right){
		int temp = arr[left];
		arr[left] = arr[right];
		arr[right] = temp;
	}

	public static void main(String args[]){
		int arr[] = new int[]{9,8,6,5,4};
		quickSort(arr, 0, arr.length - 1);
		for(int num : arr){
			System.out.print(num + " ");
		}
	}
}

