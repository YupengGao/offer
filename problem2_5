class problem2_5{
	static class Node{
		int val;
		Node next;
		Node(int v){
			this.val = v;
		}
	}
	//the least significant number is the first node
	public static Node add(Node head1, Node head2){
			if(head1 == null && head2 == null){
				return null;
			}
			if(head1 == null){
				return head2;
			}
			if(head2 == null){
				return head1;
			}
			Node dummy = new Node(0);
			Node head = dummy;
			int carry = 0;
			while(head1 != null && head2 != null){
				int val = (head1.val + head2.val + carry) % 10;
				carry = (head1.val + head2.val + carry) / 10;
				Node temp = new Node(val);
				head.next = temp;
				head = head.next;
				head1 = head1.next;
				head2 = head2.next;
			}
			while(head1 != null){
				int val = (head1.val + carry) % 10;
				carry = (head1.val + carry) / 10;
				Node temp = new Node(val);
				head.next = temp;
				head = head.next;
				head1 = head1.next;
				
			}
			while(head2 != null){
				int val = (head2.val + carry) % 10;
				carry = (head2val + carry) / 10;
				Node temp = new Node(val);
				head.next = temp;
				head = head.next;
				head2 = head2.next;
				
			}
			if(carry != 0){
				Node temp = new Node(carry);
				head.next = temp;

			}
			return dummy.next;
	}
	
	public static void main(String[] args) {
		Node node1 = new Node(7);
		Node node6 = new Node(1);
		Node node2 = new Node(6);
		Node node3 = new Node(5);
		Node node4 = new Node(9);
		Node node5 = new Node(1);
		
		node1.next = node6;
		node6.next = node2;
		// node2.next = node3;
		node3.next = node4;
		node4.next = node5;
		Node head1 = node1;
		Node head2 = node3;
		Node head = partition(head1, head2);
		while(head != null){
			System.out.println(head.val);
			head = head.next;
		}
	}
}
